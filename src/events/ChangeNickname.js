import { Event, Language, Logger } from "fca-dunnn";
import { Fca } from "fca-dunnn/types/Fca";

class ChangeNickname extends Event {
    constructor(dl) {
        super({
            name: "change_nickname",
            eventType: ["log:subscribe"]
        }, dl)
    }


    /**
     * 
     * @param {Fca.MessageEvent} event 
     */
    async execute(event) {
        const {logMessageData} = event
        for(let item of logMessageData.addedParticipants) {
            if(item.userFbId == this.botUuid) {
                try {
                    await this.api.changeNickname(`[ ${this.botConfig.prefix} ] - ${this.botConfig.name} (${this.botConfig.description})`, event.threadID, this.botUuid)
                    let thread = await this.api.getThreadInfo(event.threadID)
                    Logger.setLabel("NOTIFICATION").info(await Language.handleText("Bot Ä‘Æ°á»£c thÃªm vÃ o nhÃ³m: " + thread.name + " (" + thread.threadID + ")"))
                    this.message.reply(`ChÃ o ${thread.name} ðŸ‘‹. Bot Ä‘Ã£ sáºµn sÃ ng Ä‘Æ°á»£c sá»­ dá»¥ng. Vui lÃ²ng chat ${this.botConfig.prefix}help Ä‘á»ƒ xem cÃ¡ch sá»­ dá»¥ng. ChÃºc cÃ¡c báº¡n cÃ³ má»™t ngÃ y vui váº»!`, event.threadID)
                }catch(e) {
                    Logger.setLabel(this.name).error(e)
                }
            }
        }
    }
}

export default ChangeNickname